@using Bat.Blazor.App.Layout
@using Bat.Blazor.App.Shared
@using Bat.Shared.Identity

@attribute [Route(UIGlobals.ROUTE_IDENTITY_USERS)]
@inherits BaseComponent

<SectionContent SectionId="MainLayout.Breadcrumb">
    <li class="breadcrumb-item">
        <a href="@UIGlobals.ROUTE_HOME">Home</a>
    </li>
    <li class="breadcrumb-item active">
        <span>Users</span>
    </li>
</SectionContent>

<AuthorizeView Policy="@BuiltinPolicies.POLICY_NAME_ADMIN_ROLE_OR_USER_MANAGER">
    <Authorized>
        <PageTitle>@PAGE_TITLE | @AppInfo?.Name v@(AppInfo?.Version)</PageTitle>
        <div class="container-lg px-4">
            <div class="card border-top-3 mb-4">
                <div class="card-header">
                    <h4 class="card-title">@PAGE_TITLE</h4>
                </div>
                <div class="card-body">
					@if (!string.IsNullOrEmpty(AlertMessage))
					{
						<CAlert type="@AlertType">
							@AlertMessage
						</CAlert>
					}
					@if (!HideUI)
					{
						<AuthorizeView Policy="@BuiltinPolicies.POLICY_NAME_ADMIN_ROLE_OR_CREATE_USER_PERM">
							<ChildContent Context="context1">
								<button class="btn btn-primary btn-sm mb-3" @onclick="BtnClickAdd"><CIcon icon="cil-plus" /> Add New User</button>
							</ChildContent>
						</AuthorizeView>
					}
                    @if (UserList != null && !HideUI)
                    {
                        <table class="table table-sm table-bordered border-primary table-striped table-hover">
                            <thead>
                                <tr>
                                    <th scope="col" class="text-center">#</th>
                                    <th scope="col" class="text-center">Id</th>
                                    <th scope="col" class="text-center">User name</th>
                                    <th scope="col" class="text-center">Email</th>
									<th scope="col" class="text-center">Given name</th>
									<th scope="col" class="text-center">Family name</th>
                                    <th scope="col" class="text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in UserList)
                                {
                                    <tr>
                                        <th scope="row" class="text-center">@(++UserIndex)</th>
                                        <td class="text-center">@item.Id</td>
                                        <td class="text-center">@item.Username</td>
                                        <td class="text-center">@item.Email</td>
										<td class="text-center">@item.GivenName</td>
										<td class="text-center">@item.FamilyName</td>
                                        <td class="text-center">
                                            <button class="btn btn-sm btn-outline-primary" @onclick="(()=>BtnClickInfo(item.Id))">
                                                <CIcon icon="cil-info" />
                                            </button>
                                            <button class="btn btn-sm btn-outline-info" @onclick="(()=>BtnClickModify(item.Id))">
                                                <CIcon icon="cil-pencil" />
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger" @onclick="(()=>BtnClickDelete(item.Id))">
                                                <CIcon icon="cil-x" />
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
					@if (!HideUI)
					{
						<AuthorizeView Policy="@BuiltinPolicies.POLICY_NAME_ADMIN_ROLE_OR_CREATE_USER_PERM">
							<ChildContent Context="context2">
								<button class="btn btn-primary btn-sm float-end" @onclick="BtnClickAdd"><CIcon icon="cil-plus" /> Add New User</button>
							</ChildContent>
						</AuthorizeView>
					}
                </div>
            </div>
        </div>
    </Authorized>
    <Authorizing>
        <AuthorizingView PageTitle="@($"{PAGE_TITLE} | {AppInfo?.Name} v{AppInfo?.Version} - Authorizing...")" />
    </Authorizing>
    <NotAuthorized>
        <NotAuthorizedView PageTitle="@($"{PAGE_TITLE} | {AppInfo?.Name} v{AppInfo?.Version} - Not Authorized")" LoginUrl="@LoginUrl" />
    </NotAuthorized>
</AuthorizeView>

<CModal @ref="@ModalDialogInfo" title="User Information" centered="false" type="info" size="large">
    <div class="card">
        <div class="card-body">
			<form>
				<div class="row mb-1">
					<label for="inputId" class="col-sm-2 col-form-label col-form-label-sm">Id</label>
					<div class="col-sm">
						<input type="text" class="form-control form-control-sm" id="inputId" disabled value="@(SelectedUser?.Id)">
					</div>
				</div>
				<div class="row mb-1">
					<label for="inputUsername" class="col-sm-2 col-form-label col-form-label-sm">User name</label>
					<div class="col-sm">
						<input type="text" class="form-control form-control-sm" id="inputUsername" disabled value="@(SelectedUser?.Username)">
					</div>
					<label for="inputEmail" class="col-sm-2 col-form-label col-form-label-sm">Email</label>
					<div class="col-sm">
						<input type="email" class="form-control form-control-sm" id="inputEmail" disabled value="@(SelectedUser?.Email)">
					</div>
				</div>
				<hr />
				<div class="row mb-1">
					<label for="inputFamilyName" class="col-sm-2 col-form-label col-form-label-sm">Family name</label>
					<div class="col-sm">
						<input type="text" class="form-control form-control-sm" id="inputFamilyName" disabled value="@(SelectedUser?.FamilyName)">
					</div>
					<label for="inputGivenName" class="col-sm-2 col-form-label col-form-label-sm">Given name</label>
					<div class="col-sm">
						<input type="text" class="form-control form-control-sm" id="inputGivenName" disabled value="@(SelectedUser?.GivenName)">
					</div>
				</div>
				<hr />
				<div class="row mb-1">
					<div class="col-sm-6">
						@if (SelectedUser?.Roles is not null)
						{
							<label class="col-form-label col-form-label-sm">Roles:</label>
							<ul class="list-unstyled">
								@foreach (var role in SelectedUser?.Roles!)
								{
									<li class="col-form-label col-form-label-sm"><BIcon icon="bi-person-lines-fill" /> <abbr title="@role.Description">@role.Name</abbr></li>
								}
							</ul>
						}
					</div>
					<div class="col-sm-6">
						@if (SelectedUser?.Claims is not null)
						{
							<label class="col-form-label col-form-label-sm">Claims:</label>
							<ul class="list-unstyled">
								@foreach (var claim in SelectedUser?.Claims!)
								{
									<li class="col-form-label col-form-label-sm"><BIcon icon="bi-shield-check" /> @claim.ClaimType:@claim.ClaimValue</li>
								}
							</ul>
						}
					</div>
				</div>
			</form>
			<hr />
            <button type="button" class="btn btn-secondary" @onclick="() => ModalDialogInfo.Close()"><CIcon icon="x-circle" /> Close</button>
        </div>
    </div>
</CModal>

<CModal @ref="@ModalDialogDelete" title="Delete User" centered="false" type="danger" size="large">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Are you sure you want to delete user <strong>@(SelectedUser?.Username)</strong>?</h5>
            <h6 class="card-subtitle mb-2 text-body-secondary">Id: @(SelectedUser?.Id)</h6>
            <p class="card-text">@(SelectedUser?.Email)</p>
            @if (SelectedUser?.Claims is not null)
            {
                <p class="card-text">
                    Claims:
                    <ul>
                        @foreach (var claim in SelectedUser?.Claims!)
                        {
                            <li>@claim.ClaimType: @claim.ClaimValue</li>
                        }
                    </ul>
                </p>
            }
            <button type="button" class="btn btn-secondary" @onclick="() => ModalDialogDelete.Close()"><CIcon icon="x-circle" /> Cancel</button>
			<button type="button" class="btn btn-danger" @onclick="() => BtnClickDeleteConfirm()"><CIcon icon="x" /> Delete</button>
        </div>
    </div>
</CModal>

@code {
    private const string PAGE_TITLE = "Users";
    private string LoginUrl
    {
        get
        {
            return $"{UIGlobals.ROUTE_LOGIN}?returnUrl=/{System.Net.WebUtility.UrlEncode(NavigationManager.ToBaseRelativePath(NavigationManager.Uri))}";
        }
    }
}
