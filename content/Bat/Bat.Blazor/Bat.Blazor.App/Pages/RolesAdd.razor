@using Bat.Blazor.App.Layout
@using Bat.Blazor.App.Shared
@using Bat.Shared.Identity

@attribute [Route(UIGlobals.ROUTE_IDENTITY_ROLES_ADD)]
@inherits BaseComponent

<SectionContent SectionId="MainLayout.Breadcrumb">
    <li class="breadcrumb-item">
        <a href="@UIGlobals.ROUTE_HOME">Home</a>
    </li>
	<li class="breadcrumb-item">
        <a href="@UIGlobals.ROUTE_IDENTITY_ROLES">Roles</a>
    </li>
    <li class="breadcrumb-item active">
        <span>Add New Role</span>
    </li>
</SectionContent>

<AuthorizeView Policy="@BuiltinPolicies.POLICY_NAME_ADMIN_ROLE_OR_CREATE_ROLE_PERM">
    <Authorized>
        <PageTitle>@PAGE_TITLE | @AppInfo?.Name v@(AppInfo?.Version)</PageTitle>
        <div class="container-lg px-4">
            <div class="card border-top-3 mb-4">
                <div class="card-header">
                    <h4 class="card-title">@PAGE_TITLE</h4>
                </div>
                <div class="card-body">
					@if (!string.IsNullOrEmpty(AlertMessage))
					{
						<CAlert type="@AlertType">
							@AlertMessage
						</CAlert>
					}
					<form>
						<div class="form-floating mb-2">
							<input type="text" class="form-control form-control-sm" id="roleName" placeholder="Role Name" @bind-value="RoleName">
							<label for="roleName">Role Name</label>
						</div>
						<div class="form-floating mb-2">
							<input type="text" class="form-control" id="roleDescription" placeholder="Role Description" @bind-value="RoleDescription">
							<label for="roleDescription">Role Description</label>
						</div>
						@if (ClaimList != null)
						{
							<label>Claims:</label>
							@foreach (var claim in ClaimList)
							{
								<div class="form-check">
									<input class="form-check-input" type="checkbox" id="claim-@claim.ClaimType-@claim.ClaimValue" value="@claim.ClaimType:@claim.ClaimValue" @onchange="(()=>OnClaimChanged(claim.ClaimType, claim.ClaimValue))">
									<label class="form-check-label" for="claim-@claim.ClaimType-@claim.ClaimValue">@claim.ClaimType:@claim.ClaimValue</label>
								</div>
							}
						}
					</form>
                </div>
				<div class="card-footer">
					<button class="btn btn-secondary" @onclick="(()=>BtnClickCancel())"><CIcon icon="cil-x-circle" /> Cancel</button>
					<button class="btn btn-primary" @onclick="(()=>BtnClickCreate())"><CIcon icon="cil-save" /> Create Role</button>
				</div>
            </div>
        </div>
    </Authorized>
    <Authorizing>
        <AuthorizingView PageTitle="@($"{PAGE_TITLE} | {AppInfo?.Name} v{AppInfo?.Version} - Authorizing...")" />
    </Authorizing>
    <NotAuthorized>
        <NotAuthorizedView PageTitle="@($"{PAGE_TITLE} | {AppInfo?.Name} v{AppInfo?.Version} - Not Authorized")" LoginUrl="@LoginUrl" />
    </NotAuthorized>
</AuthorizeView>

@code {
    private const string PAGE_TITLE = "Add New Role";
    private string LoginUrl
    {
        get
        {
            return $"{UIGlobals.ROUTE_LOGIN}?returnUrl=/{System.Net.WebUtility.UrlEncode(NavigationManager.ToBaseRelativePath(NavigationManager.Uri))}";
        }
    }
}
